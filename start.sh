#!/bin/bash

# Energetic Backend Startup Script
# This script helps you get started with local development

echo "üöÄ Starting Energetic Backend..."

# Check if .env file exists
if [ ! -f .env ]; then
    echo "‚ö†Ô∏è  .env file not found. Creating from template..."
    cp env.example .env
    echo "üìù Please edit .env file and add your ANTHROPIC_API_KEY"
    echo "   Then run this script again."
    exit 1
fi

# Check if ANTHROPIC_API_KEY is set
if ! grep -q "ANTHROPIC_API_KEY=your_anthropic_api_key_here" .env; then
    echo "‚úÖ Environment variables configured"
else
    echo "‚ö†Ô∏è  Please set your ANTHROPIC_API_KEY in .env file"
    exit 1
fi

# Check if Docker is running
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker is not running. Please start Docker and try again."
    exit 1
fi

echo "üê≥ Starting services with Docker Compose..."

# Start the services
docker-compose up -d

echo "‚è≥ Waiting for services to be ready..."

# Wait for database to be ready
echo "üìä Waiting for database..."
until docker-compose exec -T postgres pg_isready -U postgres > /dev/null 2>&1; do
    echo "   Database not ready yet..."
    sleep 2
done

echo "‚úÖ Database is ready!"

# Wait for backend to be ready
echo "üîß Waiting for backend..."
until curl -f http://localhost:8000/health > /dev/null 2>&1; do
    echo "   Backend not ready yet..."
    sleep 2
done

echo "‚úÖ Backend is ready!"

echo ""
echo "üéâ Energetic Backend is now running!"
echo ""
echo "üìç Access points:"
echo "   ‚Ä¢ Frontend:        http://localhost:8000"
echo "   ‚Ä¢ API Docs:        http://localhost:8000/api/docs"
echo "   ‚Ä¢ Health Check:    http://localhost:8000/health"
echo "   ‚Ä¢ VNC:            localhost:5900"
echo "   ‚Ä¢ noVNC:          http://localhost:6080"
echo ""
echo "üîç View logs:"
echo "   ‚Ä¢ Backend:         docker-compose logs -f backend"
echo "   ‚Ä¢ Database:        docker-compose logs -f postgres"
echo "   ‚Ä¢ VNC:            docker-compose logs -f vnc"
echo ""
echo "üõë Stop services:    docker-compose down"
echo ""
